---
#Create application directory
- name: Create WordPress application directory
  become: yes
  file:
    path: /opt/wordpress
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

# Copy Docker Compose files
- name: Copy Docker Compose file
  become: yes
  copy:
    src: docker-compose.yml
    dest: /opt/wordpress/docker-compose.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Copy environment file
  become: yes
  copy:
    src: .env
    dest: /opt/wordpress/.env
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

# Generate random secrets
- name: Generate random WordPress database password
  set_fact:
    wordpress_db_password: "{{ lookup('password', '/dev/null', length=16, chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') }}"

- name: Generate random MySQL user password
  set_fact:
    mysql_user_password: "{{ lookup('password', '/dev/null', length=16, chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') }}"

- name: Generate random MySQL root password
  set_fact:
    mysql_root_password: "{{ lookup('password', '/dev/null', length=16, chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') }}"

- name: Generate random WordPress admin password
  set_fact:
    wordpress_admin_password: "{{ lookup('password', '/dev/null', length=16, chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+') }}"

# Update environment file with generated passwords
- name: Update environment file with WordPress DB password
  become: yes
  lineinfile:
    path: /opt/wordpress/.env
    regexp: '^WORDPRESS_DB_PASSWORD='
    line: "WORDPRESS_DB_PASSWORD={{ wordpress_db_password }}"

- name: Update environment file with MySQL user password
  become: yes
  lineinfile:
    path: /opt/wordpress/.env
    regexp: '^MYSQL_PASSWORD='
    line: "MYSQL_PASSWORD={{ mysql_user_password }}"

- name: Update environment file with MySQL root password
  become: yes
  lineinfile:
    path: /opt/wordpress/.env
    regexp: '^MYSQL_ROOT_PASSWORD='
    line: "MYSQL_ROOT_PASSWORD={{ mysql_root_password }}"

- name: Update environment file with WordPress admin password
  become: yes
  lineinfile:
    path: /opt/wordpress/.env
    regexp: '^WP_ADMIN_PASSWORD='
    line: "WP_ADMIN_PASSWORD={{ wordpress_admin_password }}"

# Deploy WordPress with Docker Compose
- name: Stop existing WordPress containers
  become: yes
  shell: cd /opt/wordpress && docker-compose down
  ignore_errors: yes

- name: Start WordPress with Docker Compose
  become: yes
  shell: cd /opt/wordpress && docker-compose up -d


# - name: Show site_domain value for debugging
#   debug:
#     msg: "site_domain is '{{ site_domain | default('UNDEFINED') }}'"

# - name: Show running containers for debugging
#   shell: docker ps --format '{{.Names}}'
#   register: running_containers

# - name: Show running containers output
#   debug:
#     var: running_containers.stdout_lines

# - name: Update WordPress site and admin URLs to use provided domain with HTTPS (container login, no DB creds)
#   become: yes
#   vars:
#     wordpress_container_name: "wordpress"  # Change this to match your actual container name (e.g., "wordpress", "wordpress_app", etc.)
#   shell: |
#     docker exec {{ wordpress_container_name }} wp option update siteurl "https://{{ site_domain }}"
#     docker exec {{ wordpress_container_name }} wp option update home "https://{{ site_domain }}"
#   args:
#     warn: false
#   when: site_domain is defined and site_domain | length > 0


- name: Display WordPress access information
  debug:
    msg:
      - "✅ WordPress has been deployed successfully!"
      - "🌐 WordPress URL: http://{{ ansible_host | default('localhost') }}:8080"
      - "👤 WordPress Admin User: {{ lookup('env', 'WP_ADMIN_USER') | default('admin') }}"
      - "🔑 WordPress Admin Password: {{ wordpress_admin_password }}"
      - "🔑 WordPress DB Password: {{ wordpress_db_password }}"
      - "🔑 MySQL User Password: {{ mysql_user_password }}"
      - "🔑 MySQL Root Password: {{ mysql_root_password }}"
      - "⚠️ Please save these credentials in a secure location!"
      - "🔑 MySQL Root Password: {{ mysql_root_password }}"
      - "⚠️ Please save these credentials in a secure location!"
      - "🔑 MySQL Root Password: {{ mysql_root_password }}"
      - "⚠️ Please save these credentials in a secure location!"
      - "🔑 MySQL Root Password: {{ mysql_root_password }}"
      - "⚠️ Please save these credentials in a secure location!"
